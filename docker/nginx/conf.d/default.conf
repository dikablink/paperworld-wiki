server {
    listen 80;

    server_name wiki.anarkadia.net;

    # Let Certbot verify with the ACME HTTP challenge
    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
        default_type "text/plain";
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;

    server_name wiki.anarkadia.net;

    ssl_certificate /etc/letsencrypt/live/wiki.anarkadia.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wiki.anarkadia.net/privkey.pem;

    # Enable HSTS for wiki.anarkadia.net
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Allow up to 100MB uploads
    client_max_body_size 100m;

    # Serve static files
    location = /robots.txt  {
        root /usr/share/nginx/html;
        default_type text/plain;
    }
    location = /sitemap.xml {
        alias /usr/share/nginx/html/sitemap/sitemap-index-paperworld-wiki.xml;
        types {}
        default_type application/xml;
        gzip off;
        add_header Content-Type application/xml;
        add_header Content-Encoding gzip;
    }
    location = /favicon.ico {
        root /usr/share/nginx/html;
        default_type image/x-icon;
    }
    location = /favicon.svg { 
        root /usr/share/nginx/html; 
        default_type image/svg+xml; 
    }
    location = /favicon-96x96.png { 
        root /usr/share/nginx/html; 
        default_type image/png; 
    }
    location = /apple-touch-icon.png { 
        root /usr/share/nginx/html; 
        default_type image/png; 
    }
    location = /site.webmanifest { 
        root /usr/share/nginx/html; 
        default_type application/manifest+json; 
    }
    location = /web-app-manifest-192x192.png { 
        root /usr/share/nginx/html; 
        default_type image/png; 
    }
    location = /web-app-manifest-512x512.png { 
        root /usr/share/nginx/html; 
        default_type image/png; 
    }

    # Handle /wiki/
    # Redirect /wiki/Main_Page/, /wiki/Main_Page, /wiki/, & /wiki to /
    location  = /bobthebuildergotshot36times/ { return 301 /; }
    location  = /wiki/Main_Page/ { return 301 /; }
    location  = /wiki/Main_Page  { return 301 /; }
    location  = /wiki/           { return 301 /; }
    location  = /wiki            { return 301 /; }
    # / -> /w/index.php?title=Main_Page (wiki/Main_Page)
    location  = /                { rewrite ^/?$ /w/index.php?title=Main_Page last; }
    # /wiki/Specific_Page -> /w/index.php?title=Specific_Page
    location ^~ /wiki/           { rewrite ^/wiki/(.+)$ /w/index.php?title=$1&$args last; }

    # Handle /w/
    # Redirect /w to /w/
    location = /w { return 301 /w/; }
    # Proxy /w/
    location /w/ {
        proxy_pass http://mediawiki:80/;

        # Standard proxy headers
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Bump timeouts for big thumbs/exports
        proxy_read_timeout 300;
        proxy_send_timeout 300;

        # Additional proxy settings
        proxy_redirect              off;
        proxy_buffering             on;
        proxy_buffers               16 32k;
        proxy_busy_buffers_size     64k;
    }
}
