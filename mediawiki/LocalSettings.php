<?php
# This file was automatically generated by the MediaWiki 1.39.13
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See docs/Configuration.md for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "The Paper World";
$wgMetaNamespace = "Paper";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://wiki.anarkadia.net";
$wgCanonicalServer = "https://wiki.anarkadia.net";

## Behind TLS proxy hardening
$wgForceHTTPS = true;
$wgCookieSecure = true;
$wgCookieSameSite = "Lax";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/w";
$wgArticlePath = "/wiki/$1";
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
	'icon' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
];

## Set favicon.ico and related
$wgFavicon = "favicon.ico";
$wgAppleTouchIcon = "apple-touch-icon.png";
$wgHooks['BeforePageDisplay'][] = function ( $out, $skin ) {
    $out->addHeadItem(
		'favicon-config', "
		<link rel=\"icon\" type=\"image/png\" href=\"/favicon-96x96.png\" sizes=\"96x96\" />
		<link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\" />
		<link rel=\"shortcut icon\" href=\"/favicon.ico\" />
		<meta name=\"apple-mobile-web-app-title\" content=\"Paper World\" />
		<link rel=\"manifest\" href=\"/site.webmanifest\" />
    ");
};

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = false; # UPO

$wgEmergencyContact = "noreply@wiki.anarkadia.net";
$wgPasswordSender = "noreply@wiki.anarkadia.net";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype     = getenv('MEDIAWIKI_DB_TYPE')     ?: 'mysql';
$wgDBserver   = getenv('MEDIAWIKI_DB_HOST')     ?: 'db';
$wgDBname     = getenv('MEDIAWIKI_DB_NAME')     ?: 'wikidb_main';
$wgDBuser     = getenv('MEDIAWIKI_DB_USER')     ?: 'wiki';
$wgDBpassword = getenv('MEDIAWIKI_DB_PASSWORD') ?: '';

# MySQL specific settings
$wgDBprefix = "";
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgFileExtensions = [ 'png','gif','jpg','jpeg','webp','pdf','svg' ];
$wgMaxUploadSize = 95 * 1024 * 1024;
$wgVerifyMimeType = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "5cbf477f90a5e4f60cc971cd74bef4cc72fee2c5e365345c3d84d892e7f17d82";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "22f65c2f42bf928b";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions["*"]["createaccount"] = false;
$wgGroupPermissions["*"]["edit"] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector"; // I prefer the desktop look of Vector :)
$wgDefaultMobileSkin = "timeless"; // I prefer the mobile look of Timeless :)
$wgMFAutodetectMobileView = true;
$wgVectorResponsive = true;

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'Math' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SecureLinkFixer' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'WikiEditor' );

# Semantic Media Wiki (& extensions):
wfLoadExtension( 'SemanticMediaWiki' );
require_once "$IP/extensions/SemanticMediaWiki/vendor/autoload.php";
require_once "$IP/extensions/SemanticMediaWiki/includes/GlobalFunctions.php";
enableSemantics( 'wiki.anarkadia.net' );

wfLoadExtension( 'SemanticResultFormats' );

# Added extensions:
wfLoadExtension( 'CodeMirror' );
wfLoadExtension( 'MobileFrontend' );
wfLoadExtension( 'HeaderTabs' );
wfLoadExtension( 'intersection' );
wfLoadExtension( 'CharInsert' );
wfLoadExtension( 'Variables' );
wfLoadExtension( 'Lockdown' );
wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'PageForms' );

# End of automatically generated settings.
# Add more configuration options below.

# Custom namespaces:
define( 'NS_PWO',   3000 );
define( 'NS_World', 3002 );

$wgExtraNamespaces[NS_PWO] =   'PWO';
$wgExtraNamespaces[NS_World] = 'World';
$wgNamespacesWithSubpages[NS_PWO] =   true;
$wgNamespacesWithSubpages[NS_World] = true;
$wgContentNamespaces[] = NS_PWO;
$wgContentNamespaces[] = NS_World;

# Generate Debug & Deprecated logs:
$wgDevelopmentWarnings = false;
$wgShowExceptionDetails = false;
$wgDebugLogFile = "/var/www/html/logs/mediawiki.log";
$wgLogDeprecated = "/var/www/html/logs/deprecated.log";

# Group Permissions:
## Restrict editing to 'sysop' users exclusively.
$wgGroupPermissions['user']         ['edit'] = false;
$wgGroupPermissions['autoconfirmed']['edit'] = false;
$wgGroupPermissions['sysop']        ['edit'] = true;
## Completely disable Talk:
### Restrict all namespaces to the 'notalk' right
$wgNamespaceProtection[NS_TALK]           = [ 'notalk' ];
$wgNamespaceProtection[NS_USER_TALK]      = [ 'notalk' ];
$wgNamespaceProtection[NS_PROJECT_TALK]   = [ 'notalk' ];
$wgNamespaceProtection[NS_FILE_TALK]      = [ 'notalk' ];
$wgNamespaceProtection[NS_MEDIAWIKI_TALK] = [ 'notalk' ];
$wgNamespaceProtection[NS_TEMPLATE_TALK]  = [ 'notalk' ];
$wgNamespaceProtection[NS_HELP_TALK]      = [ 'notalk' ];
$wgNamespaceProtection[NS_CATEGORY_TALK]  = [ 'notalk' ];
### No group (not even sysop) gets the 'notalk' or 'createtalk' right
$wgGroupPermissions['*']              ['notalk']     = false;
$wgGroupPermissions['user']           ['notalk']     = false;
$wgGroupPermissions['autoconfirmed']  ['notalk']     = false;
$wgGroupPermissions['sysop']          ['notalk']     = false;
$wgGroupPermissions['bureaucrat']     ['notalk']     = false;
$wgGroupPermissions['interface-admin']['notalk']     = false;
$wgGroupPermissions['*']              ['createtalk'] = false;
$wgGroupPermissions['user']           ['createtalk'] = false;
$wgGroupPermissions['autoconfirmed']  ['createtalk'] = false;
$wgGroupPermissions['sysop']          ['createtalk'] = false;
$wgGroupPermissions['bureaucrat']     ['createtalk'] = false;
$wgGroupPermissions['interface-admin']['createtalk'] = false;

# Lockdown Rules:
## Hide Talk namespaces from everyone
$wgNamespacePermissionLockdown[NS_TALK]          ['read'] = [];
$wgNamespacePermissionLockdown[NS_USER_TALK]     ['read'] = [];
$wgNamespacePermissionLockdown[NS_PROJECT_TALK]  ['read'] = [];
$wgNamespacePermissionLockdown[NS_FILE_TALK]     ['read'] = [];
$wgNamespacePermissionLockdown[NS_MEDIAWIKI_TALK]['read'] = [];
$wgNamespacePermissionLockdown[NS_TEMPLATE_TALK] ['read'] = [];
$wgNamespacePermissionLockdown[NS_HELP_TALK]     ['read'] = [];
$wgNamespacePermissionLockdown[NS_CATEGORY_TALK] ['read'] = [];

# Additional settings

